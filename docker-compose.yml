version: '3.8'

services:
  postgres:
    image: postgres:15  # Versão mais leve
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:  # Adicionado healthcheck
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine  # Versão específica para maior estabilidade
    container_name: redis_service
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    healthcheck:  # Adicionado healthcheck
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 3

  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgres://${DB_USERNAME}:${DB_PASSWORD}@postgres:5432/${DB_DATABASE}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: ${JWT_SECRET}
      NODE_ENV: production  # Adicionado ambiente de produção
    depends_on:
      postgres:
        condition: service_healthy  # Dependência com healthcheck
      redis:
        condition: service_healthy
    ports:
      - "3000:3000"
    networks:
      - app-network
    env_file:
      - .env
    restart: unless-stopped  # Política de reinício mais robusta

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    networks:
      - app-network
    env_file:
      - .env
    restart: unless-stopped

  nginx:
    image: nginx:1.25-alpine  
    container_name: nginx_proxy
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro  # Caminho correto
    depends_on:
      - api
      - frontend
    networks:
      - app-network

volumes:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge